Run started on Sat Aug 12 21:07:18 2023

Hostname: Q-LTOP-12

-------------------------------------------------------------------------------
Running make |
--------------

% /usr/bin/make

STDOUT:
/usr/bin/make -C Scanner
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/Scanner'
g++ -o scanner.o -c scanner.cpp -MMD -MF scanner.d
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/Scanner'
/usr/bin/make -C Utility
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/Utility'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/Utility'
/usr/bin/make -C Parser
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/Parser'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/Parser'
/usr/bin/make -C SemanticChecker
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/SemanticChecker'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/SemanticChecker'
/usr/bin/make -C Generator
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/Generator'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/Generator'
g++ -o main.o -c main.cpp -MMD -MF main.d
g++ -o golf main.o Scanner/token.o Scanner/scanner.o Utility/utility.o Parser/parser.o Parser/ast.o SemanticChecker/semantic.o SemanticChecker/stab.o Generator/backend_asm.o


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Locating GoLF compiler |
------------------------

Compiler will be run as ./golf

-------------------------------------------------------------------------------
Test: too few arguments |
-------------------------

% ./golf

STDOUT:


STDERR:
Error: Requires 1 input file


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: too many arguments |
--------------------------

% ./golf /dev/null /dev/zero

STDOUT:


STDERR:
Error: Requires 1 input file


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: nonexistent file |
------------------------

% ./golf /i/do/not/exist

STDOUT:


STDERR:
error: file '/i/do/not/exist' could not be opened


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: empty file |
------------------

% ./golf ./test/ms1/scan.t1

STDOUT:


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: comment ending in EOF |
-----------------------------

% ./golf ./test/ms1/scan.t2

STDOUT:


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: comment only |
--------------------

% ./golf ./test/ms1/scan.t3

STDOUT:


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: illegal whitespace |
--------------------------

% ./golf ./test/ms1/scan.t4

STDOUT:


STDERR:
warning: skipping unknown character '' at or near line 2
warning: skipping unknown character '' at or near line 3


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: legal whitespace |
------------------------

% ./golf ./test/ms1/scan.t5

STDOUT:


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: "}" with no previous token |
----------------------------------

% ./golf ./test/ms1/scan.t6

STDOUT:
         }     [}] @ line 1
         ;     [] @ line 1


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: the carat schtick |
-------------------------

% ./golf ./test/ms1/scan.t7

STDOUT:


STDERR:
warning: skipping unknown character '^' at or near line 2
warning: skipping unknown character '^' at or near line 3
warning: skipping unknown character '^' at or near line 4
warning: skipping unknown character '^' at or near line 5
warning: skipping unknown character '^' at or near line 6
warning: skipping unknown character '^' at or near line 7
warning: skipping unknown character '^' at or near line 8
warning: skipping unknown character '^' at or near line 9
warning: skipping unknown character '^' at or near line 10
warning: skipping unknown character '^' at or near line 11
warning: skipping unknown character '^' at or near line 12
error: Too many warnings at or near line 12


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: NUL character |
---------------------

% ./golf ./test/ms1/scan.t8

STDOUT:


STDERR:
warning: skipping NUL character at or near line 2


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: non-7-bit chars |
-----------------------

% ./golf ./test/ms1/scan.t9

STDOUT:


STDERR:
warning: skipping non-ASCII input character at or near line 2
warning: skipping non-ASCII input character at or near line 2
warning: skipping non-ASCII input character at or near line 2
warning: skipping non-ASCII input character at or near line 2


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: whitespace inside && token pair |
---------------------------------------

% ./golf ./test/ms1/scan.t10

STDOUT:


STDERR:
error: bitwise AND not supported in GoLF, expected '&&' at or near line at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: whitespace inside || token pair |
---------------------------------------

% ./golf ./test/ms1/scan.t11

STDOUT:


STDERR:
error: bitwise OR not supported in GoLF, expected '||' at or near line at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: leading 0 on number |
---------------------------

% ./golf ./test/ms1/scan.t12

STDOUT:
       int     [0600] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: comment inside && token pair |
------------------------------------

% ./golf ./test/ms1/scan.t13

STDOUT:


STDERR:
error: bitwise AND not supported in GoLF, expected '&&' at or near line at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: illegal characters |
--------------------------

% ./golf ./test/ms1/scan.t14

STDOUT:


STDERR:
warning: skipping unknown character '\' at or near line 3
warning: skipping unknown character '^' at or near line 3
warning: skipping unknown character '#' at or near line 3


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: legit token salad |
-------------------------

% ./golf ./test/ms1/scan.t15

STDOUT:
         +     [+] @ line 3
         -     [-] @ line 4
         *     [*] @ line 5
         /     [/] @ line 6
         %     [%] @ line 7
         (     [(] @ line 8
         )     [)] @ line 9
         ;     [] @ line 9
         {     [{] @ line 10
         }     [}] @ line 11
         ;     [] @ line 11
         ;     [;] @ line 12
         ,     [,] @ line 13
         ;     [] @ line 15
         !     [!] @ line 17
        !=     [!=] @ line 17
         =     [=] @ line 18
        ==     [==] @ line 18
         <     [<] @ line 19
        <=     [<=] @ line 19
         >     [>] @ line 20
        >=     [>=] @ line 20
         >     [>] @ line 22
         =     [=] @ line 22
         ;     [] @ line 22
        &&     [&&] @ line 26
        ||     [||] @ line 27
         ;     [] @ line 29
     break     [break] @ line 31
         ;     [] @ line 31
      else     [else] @ line 32
       for     [for] @ line 33
      func     [func] @ line 34
        if     [if] @ line 35
    return     [return] @ line 36
         ;     [] @ line 36
       var     [var] @ line 37
         ;     [] @ line 39
        id     [Break] @ line 41
         ;     [] @ line 41
        id     [switch] @ line 42
         ;     [] @ line 42
        id     [case] @ line 43
         ;     [] @ line 43
        id     [goto] @ line 44
         ;     [] @ line 44
        id     [continue] @ line 45
         ;     [] @ line 45
        id     [while] @ line 46
         ;     [] @ line 46
        id     [prints] @ line 47
         ;     [] @ line 47
        id     [printi] @ line 48
         ;     [] @ line 48
        id     [printb] @ line 49
         ;     [] @ line 49
        id     [printc] @ line 50
         ;     [] @ line 50
        id     [halt] @ line 51
         ;     [] @ line 51
        id     [getchar] @ line 52
         ;     [] @ line 52
        id     [true] @ line 53
         ;     [] @ line 53
        id     [bool] @ line 54
         ;     [] @ line 54
        id     [false] @ line 55
         ;     [] @ line 55
        id     [string] @ line 56
         ;     [] @ line 56
        id     [int] @ line 57
         ;     [] @ line 57
        id     [main] @ line 58
         ;     [] @ line 58
        id     [abcdef] @ line 59
         ;     [] @ line 59
        id     [abc123] @ line 60
         ;     [] @ line 60
        id     [_] @ line 61
         ;     [] @ line 61
        id     [_abc_0] @ line 62
         ;     [] @ line 62
        id     [_42] @ line 63
         ;     [] @ line 63
       int     [0] @ line 67
         ;     [] @ line 67
       int     [12345678901234567890] @ line 68
         ;     [] @ line 68


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: semicolon insertion post-break at EOF |
---------------------------------------------

% ./golf ./test/ms1/scan.t16

STDOUT:
     break     [break] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: semicolon insertion post-return at EOF |
----------------------------------------------

% ./golf ./test/ms1/scan.t17

STDOUT:
    return     [return] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: semicolon insertion post-id at EOF |
------------------------------------------

% ./golf ./test/ms1/scan.t18

STDOUT:
        id     [asdf] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: semicolon insertion post-number at EOF |
----------------------------------------------

% ./golf ./test/ms1/scan.t19

STDOUT:
       int     [12345] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: semicolon insertion post-string at EOF |
----------------------------------------------

% ./golf ./test/ms1/scan.t20

STDOUT:
    string     [asdf] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: semicolon insertion post-) at EOF |
-----------------------------------------

% ./golf ./test/ms1/scan.t21

STDOUT:
         )     [)] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: semicolon insertion post-} at EOF |
-----------------------------------------

% ./golf ./test/ms1/scan.t22

STDOUT:
         }     [}] @ line 2
         ;     [] @ line 2


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: string ending in EOF |
----------------------------

% ./golf ./test/ms1/scan.t23

STDOUT:


STDERR:
error: string terminated by EOF at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: partial string containing newline |
-----------------------------------------

% ./golf ./test/ms1/scan.t24

STDOUT:


STDERR:
error: string contains newline at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: string containing newline |
---------------------------------

% ./golf ./test/ms1/scan.t25

STDOUT:


STDERR:
error: string contains newline at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: unescaped double quote in string |
----------------------------------------

% ./golf ./test/ms1/scan.t26

STDOUT:
    string     [abc] @ line 2
        id     [def] @ line 2


STDERR:
error: string contains newline at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: string escape at EOF |
----------------------------

% ./golf ./test/ms1/scan.t27

STDOUT:


STDERR:
error: string terminated by EOF at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: string escape then newline |
----------------------------------

% ./golf ./test/ms1/scan.t28

STDOUT:


STDERR:
error: string contains newline at or near line 2


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: legal strings |
---------------------

% ./golf ./test/ms1/scan.t29

STDOUT:
    string     [abc] @ line 3
         ;     [] @ line 3
    string     [ab\t\ndef] @ line 4
         ;     [] @ line 4
    string     [ab\"cd] @ line 5
         ;     [] @ line 5
    string     [ab\\\"cd] @ line 6
         ;     [] @ line 6
    string     [a\b\r\fcd] @ line 7
         ;     [] @ line 7
    string     [abc'def] @ line 8
         ;     [] @ line 8
    string     [abc
def] @ line 9
         ;     [] @ line 9


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: illegal "x" string escape |
---------------------------------

% ./golf ./test/ms1/scan.t30

STDOUT:


STDERR:
error: bad string escape 'x' at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: illegal "a" string escape |
---------------------------------

% ./golf ./test/ms1/scan.t31

STDOUT:


STDERR:
error: bad string escape 'a' at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: illegal "u" string escape |
---------------------------------

% ./golf ./test/ms1/scan.t32

STDOUT:


STDERR:
error: bad string escape 'u' at or near line 3


RETURN CODE: 1

Run ended on Sat Aug 12 21:07:30 2023

