Run started on Wed Apr 12 19:39:56 2023

Hostname: csx3.cs.ucalgary.ca

-------------------------------------------------------------------------------
Running make |
--------------

% /usr/bin/make

STDOUT:
/usr/bin/make -C Scanner
make[1]: Entering directory '/home/ugb/jay.chuang1/golf-compiler/Scanner'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/ugb/jay.chuang1/golf-compiler/Scanner'
/usr/bin/make -C Utility
make[1]: Entering directory '/home/ugb/jay.chuang1/golf-compiler/Utility'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/ugb/jay.chuang1/golf-compiler/Utility'
/usr/bin/make -C Parser
make[1]: Entering directory '/home/ugb/jay.chuang1/golf-compiler/Parser'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/ugb/jay.chuang1/golf-compiler/Parser'
/usr/bin/make -C SemanticChecker
make[1]: Entering directory '/home/ugb/jay.chuang1/golf-compiler/SemanticChecker'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/ugb/jay.chuang1/golf-compiler/SemanticChecker'
/usr/bin/make -C Generator
make[1]: Entering directory '/home/ugb/jay.chuang1/golf-compiler/Generator'
g++ -o backend_asm.o -c backend_asm.cpp -MMD -MF backend_asm.d
make[1]: Leaving directory '/home/ugb/jay.chuang1/golf-compiler/Generator'
g++ -o main.o -c main.cpp -MMD -MF main.d
g++ -o golf main.o Scanner/scanner.o Scanner/token.o Utility/utility.o Parser/ast.o Parser/parser.o SemanticChecker/semantic.o SemanticChecker/stab.o Generator/backend_asm.o


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Locating GoLF compiler |
------------------------

Compiler will be run as ./golf

-------------------------------------------------------------------------------
Test: too few arguments |
-------------------------

% ./golf

STDOUT:


STDERR:
Error: Requires 1 input file


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: too many arguments |
--------------------------

% ./golf /dev/null /dev/zero

STDOUT:


STDERR:
Error: Requires 1 input file


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: nonexistent file |
------------------------

% ./golf /i/do/not/exist

STDOUT:


STDERR:
Error: file '/i/do/not/exist' could not be opened


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: later global "int" redeclaration |
----------------------------------------

% ./golf ./test/ms3/check.t1

STDOUT:


STDERR:
Error: expected type, got "int" at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: global var declaration loop |
-----------------------------------

% ./golf ./test/ms3/check.t2

STDOUT:


STDERR:
Error: expected type, got "int" at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: local var version of check.t2 |
-------------------------------------

% ./golf ./test/ms3/check.t3

STDOUT:
	Ltrue = 1
	Lfalse = 0
.data
S0:
	.byte 0
	
.text
main:
	jal Lmain
	j Lhalt
Lmain:
	subu $sp,$sp,8
	sw $ra,0($sp)
	sw $0,4($sp)
	lw $t0,4($sp)
	move $a0,$t0
	jal Lprinti
RLmain:
	lw $ra,0($sp)
	addu $sp,$sp,8
	jr $ra
	
Lprintb:
	beqz $a0,PrintFalse
	la $a0,PDCTrue
	j Lprints
PrintFalse:
	la $a0,PDCFalse
	j Lprints
Lhalt:
	li $v0,10
	syscall
Lprintc:
	li $v0,11
	syscall
	jr $ra
Lprinti:
	li $v0 1
	syscall
	jr $ra
Lprints:
	li $v0,4
	syscall
	jr $ra
Lgetchar:
	li $v0,8
	syscall
	jr $ra
Llen:
	addi $sp,$sp,-4
	sw $ra,0($sp)
	li $t0,0 
loopStart:
	lb $t1, ($a0)
	beq $t1, $zero, loopEnd
	addi $a0,$a0,1
	addi $t0,$t0,1
	j loopStart
loopEnd:
	lw $ra, 0($sp)
	addi $sp,$sp,4
	move $v0,$t0
	jr $ra
.data
PDCTrue:
	.byte 116
	.byte 114
	.byte 117
	.byte 101
PDCFalse:
	.byte 102
	.byte 97
	.byte 108
	.byte 115
	.byte 101


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: global name test |
------------------------

% ./golf ./test/ms3/check.t4

STDOUT:
	Ltrue = 1
	Lfalse = 0
.data
S0:
	.byte 0
	
.text
G0:
	.word 0
main:
	jal Lmain
	j Lhalt
G1:
	.word 0
Lb4func:
	subu $sp,$sp,4
	sw $ra,0($sp)
	lw $t0,G0
	move $a0,$t0
	jal Lprinti
	lw $t0,G1
	move $a0,$t0
	jal Lprinti
	jal Laft3rfunc
RLb4func:
	lw $ra,0($sp)
	addu $sp,$sp,4
	jr $ra
Lmain:
	subu $sp,$sp,4
	sw $ra,0($sp)
	jal Lb4func
RLmain:
	lw $ra,0($sp)
	addu $sp,$sp,4
	jr $ra
Laft3rfunc:
	subu $sp,$sp,4
	sw $ra,0($sp)
	lw $t0,G0
	move $a0,$t0
	jal Lprinti
	lw $t0,G1
	move $a0,$t0
	jal Lprinti
RLaft3rfunc:
	lw $ra,0($sp)
	addu $sp,$sp,4
	jr $ra
	
Lprintb:
	beqz $a0,PrintFalse
	la $a0,PDCTrue
	j Lprints
PrintFalse:
	la $a0,PDCFalse
	j Lprints
Lhalt:
	li $v0,10
	syscall
Lprintc:
	li $v0,11
	syscall
	jr $ra
Lprinti:
	li $v0 1
	syscall
	jr $ra
Lprints:
	li $v0,4
	syscall
	jr $ra
Lgetchar:
	li $v0,8
	syscall
	jr $ra
Llen:
	addi $sp,$sp,-4
	sw $ra,0($sp)
	li $t0,0 
loopStart:
	lb $t1, ($a0)
	beq $t1, $zero, loopEnd
	addi $a0,$a0,1
	addi $t0,$t0,1
	j loopStart
loopEnd:
	lw $ra, 0($sp)
	addi $sp,$sp,4
	move $v0,$t0
	jr $ra
.data
PDCTrue:
	.byte 116
	.byte 114
	.byte 117
	.byte 101
PDCFalse:
	.byte 102
	.byte 97
	.byte 108
	.byte 115
	.byte 101


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: block scope check |
-------------------------

% ./golf ./test/ms3/check.t5

STDOUT:
	Ltrue = 1
	Lfalse = 0
.data
S0:
	.byte 0
S1:
	.byte 97
	.byte 115
	.byte 100
	.byte 102
	.byte 0
	
.text
main:
	jal Lmain
	j Lhalt
Lmain:
	subu $sp,$sp,20
	sw $ra,0($sp)
	sw $0,4($sp)
	sw $0,8($sp)
	la $v1,S0
	sw $v1,12($sp)
	la $t0,S1
	sw $t0,12($sp)
	sw $0,16($sp)
	lw $t0,16($sp)
	li $t1,1
	addu $t2,$t0,$t1
	sw $t2,16($sp)
	lw $t0,12($sp)
	move $a0,$t0
	jal Lprints
	lw $t0,8($sp)
	move $a0,$t0
	jal Lprintb
	lw $t0,4($sp)
	move $a0,$t0
	jal Lprinti
RLmain:
	lw $ra,0($sp)
	addu $sp,$sp,20
	jr $ra
	
Lprintb:
	beqz $a0,PrintFalse
	la $a0,PDCTrue
	j Lprints
PrintFalse:
	la $a0,PDCFalse
	j Lprints
Lhalt:
	li $v0,10
	syscall
Lprintc:
	li $v0,11
	syscall
	jr $ra
Lprinti:
	li $v0 1
	syscall
	jr $ra
Lprints:
	li $v0,4
	syscall
	jr $ra
Lgetchar:
	li $v0,8
	syscall
	jr $ra
Llen:
	addi $sp,$sp,-4
	sw $ra,0($sp)
	li $t0,0 
loopStart:
	lb $t1, ($a0)
	beq $t1, $zero, loopEnd
	addi $a0,$a0,1
	addi $t0,$t0,1
	j loopStart
loopEnd:
	lw $ra, 0($sp)
	addi $sp,$sp,4
	move $v0,$t0
	jr $ra
.data
PDCTrue:
	.byte 116
	.byte 114
	.byte 117
	.byte 101
PDCFalse:
	.byte 102
	.byte 97
	.byte 108
	.byte 115
	.byte 101


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: global var declaration, complex loop |
--------------------------------------------

% ./golf ./test/ms3/check.t6

STDOUT:


STDERR:
Error: expected type, got "bool" at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: parameter scope test |
----------------------------

% ./golf ./test/ms3/check.t7

STDOUT:


STDERR:
Error: expected type, got "int" at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: constants can't be changed |
----------------------------------

% ./golf ./test/ms3/check.t8

STDOUT:


STDERR:
Error: can't assign to a constant at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: nonexistent type name |
-----------------------------

% ./golf ./test/ms3/check.t9

STDOUT:


STDERR:
Error: unknown identifier "notthere" at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: type name not a type |
----------------------------

% ./golf ./test/ms3/check.t10

STDOUT:


STDERR:
Error: expected type, got "t" at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: formal parameters need types |
------------------------------------

% ./golf ./test/ms3/check.t11

STDOUT:


STDERR:
Error: expected type, got "main" at or near line 6


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: multiple (main) functions, same name |
--------------------------------------------

% ./golf ./test/ms3/check.t12

STDOUT:


STDERR:
Error: "main" redefined at or near line 7


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: no main function |
------------------------

% ./golf ./test/ms3/check.t13

STDOUT:


STDERR:
Error: missing main() function


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: main can't have arguments |
---------------------------------

% ./golf ./test/ms3/check.t14

STDOUT:


STDERR:
Error: main() can't have arguments at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: main can't have a return value |
--------------------------------------

% ./golf ./test/ms3/check.t15

STDOUT:


STDERR:
Error: main() can't have a return value at or near line 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: dup check for formal parameters |
---------------------------------------

% ./golf ./test/ms3/check.t16

STDOUT:


STDERR:
Error: "i" redefined at or near line 7


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: function call as lvalue |
-------------------------------

% ./golf ./test/ms3/check.t17

STDOUT:


STDERR:
Error: can only assign to a variable at or near line 6


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: function name as lvalue |
-------------------------------

% ./golf ./test/ms3/check.t18

STDOUT:


STDERR:
Error: operand type mismatch for "=" at or near line 6


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: humongous integer literal |
---------------------------------

% ./golf ./test/ms3/check.t19

STDOUT:


STDERR:
Error: integer literal out of range at or near line 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: positive integer literal out of range |
---------------------------------------------

% ./golf ./test/ms3/check.t20

STDOUT:


STDERR:
Error: integer literal out of range at or near line 6


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: negative integer literal out of range |
---------------------------------------------

% ./golf ./test/ms3/check.t21

STDOUT:


STDERR:
Error: integer literal out of range at or near line 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" not inside "for" loop |
-------------------------------------

% ./golf ./test/ms3/check.t22

STDOUT:


STDERR:
Error: break must be inside 'for' at or near line 7


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" in block, but not in "for" |
------------------------------------------

% ./golf ./test/ms3/check.t23

STDOUT:


STDERR:
Error: break must be inside 'for' at or near line 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" in "if" block |
-----------------------------

% ./golf ./test/ms3/check.t24

STDOUT:


STDERR:
Error: break must be inside 'for' at or near line 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: missing return statement |
--------------------------------

% ./golf ./test/ms3/check.t25

STDOUT:


STDERR:
Error: no return statement in function at or near line 6


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: returning value from void function |
------------------------------------------

% ./golf ./test/ms3/check.t26

STDOUT:


STDERR:
Error: Expected source file at or near line 1


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: return type mismatch |
----------------------------

% ./golf ./test/ms3/check.t27

STDOUT:


STDERR:
Error: returned value has the wrong type at or near line 7


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: missing return type |
---------------------------

% ./golf ./test/ms3/check.t28

STDOUT:


STDERR:
Error: this function must return a value at or near line 7


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "if" expr not a boolean type |
------------------------------------

% ./golf ./test/ms3/check.t29

STDOUT:


STDERR:
Error: if expression must be boolean type at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "if"-"else" not a boolean type |
--------------------------------------

% ./golf ./test/ms3/check.t30

STDOUT:


STDERR:
Error: ifelse expression must be boolean type at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "for" expr not a boolean type |
-------------------------------------

% ./golf ./test/ms3/check.t31

STDOUT:


STDERR:
Error: for expression must be boolean type at or near line 10


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: legit expression statements |
-----------------------------------

% ./golf ./test/ms3/check.t32

STDOUT:
	Ltrue = 1
	Lfalse = 0
.data
S0:
	.byte 0
	
.text
main:
	jal Lmain
	j Lhalt
Lmain:
	subu $sp,$sp,8
	sw $ra,0($sp)
	sw $0,4($sp)
	lw $t0,4($sp)
	li $t1,42
RLmain:
	lw $ra,0($sp)
	addu $sp,$sp,8
	jr $ra
	
Lprintb:
	beqz $a0,PrintFalse
	la $a0,PDCTrue
	j Lprints
PrintFalse:
	la $a0,PDCFalse
	j Lprints
Lhalt:
	li $v0,10
	syscall
Lprintc:
	li $v0,11
	syscall
	jr $ra
Lprinti:
	li $v0 1
	syscall
	jr $ra
Lprints:
	li $v0,4
	syscall
	jr $ra
Lgetchar:
	li $v0,8
	syscall
	jr $ra
Llen:
	addi $sp,$sp,-4
	sw $ra,0($sp)
	li $t2,0 
loopStart:
	lb $t3, ($a0)
	beq $t3, $zero, loopEnd
	addi $a0,$a0,1
	addi $t2,$t2,1
	j loopStart
loopEnd:
	lw $ra, 0($sp)
	addi $sp,$sp,4
	move $v0,$t2
	jr $ra
.data
PDCTrue:
	.byte 116
	.byte 114
	.byte 117
	.byte 101
PDCFalse:
	.byte 102
	.byte 97
	.byte 108
	.byte 115
	.byte 101


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: built-in routine check |
------------------------------

% ./golf ./test/ms3/check.t33

STDOUT:
	Ltrue = 1
	Lfalse = 0
.data
S0:
	.byte 0
S1:
	.byte 72
	.byte 101
	.byte 108
	.byte 108
	.byte 111
	.byte 44
	.byte 32
	.byte 119
	.byte 111
	.byte 114
	.byte 108
	.byte 100
	.byte 33
	.byte 10
	.byte 0
	
.text
main:
	jal Lmain
	j Lhalt
Lmain:
	subu $sp,$sp,8
	sw $ra,0($sp)
	la $t0,S1
	move $a0,$t0
	jal Lprints
	li $t0,Ltrue
	move $a0,$t0
	jal Lprintb
	li $t0,123
	move $a0,$t0
	jal Lprinti
	li $t0,123
	move $a0,$t0
	jal Lprintc
	sw $0,4($sp)
	jal Lgetchar
	move $t0,$v0
	sw $t0,4($sp)
	jal Lhalt
RLmain:
	lw $ra,0($sp)
	addu $sp,$sp,8
	jr $ra
	
Lprintb:
	beqz $a0,PrintFalse
	la $a0,PDCTrue
	j Lprints
PrintFalse:
	la $a0,PDCFalse
	j Lprints
Lhalt:
	li $v0,10
	syscall
Lprintc:
	li $v0,11
	syscall
	jr $ra
Lprinti:
	li $v0 1
	syscall
	jr $ra
Lprints:
	li $v0,4
	syscall
	jr $ra
Lgetchar:
	li $v0,8
	syscall
	jr $ra
Llen:
	addi $sp,$sp,-4
	sw $ra,0($sp)
	li $t0,0 
loopStart:
	lb $t1, ($a0)
	beq $t1, $zero, loopEnd
	addi $a0,$a0,1
	addi $t0,$t0,1
	j loopStart
loopEnd:
	lw $ra, 0($sp)
	addi $sp,$sp,4
	move $v0,$t0
	jr $ra
.data
PDCTrue:
	.byte 116
	.byte 114
	.byte 117
	.byte 101
PDCFalse:
	.byte 102
	.byte 97
	.byte 108
	.byte 115
	.byte 101


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: actual parameter type check |
-----------------------------------

% ./golf ./test/ms3/check.t34

STDOUT:


STDERR:
Error: number/type of arguments doesn't match function declaration at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: operand type mismatch |
-----------------------------

% ./golf ./test/ms3/check.t35

STDOUT:


STDERR:
Error: operand type mismatch for "+" at or near line 10


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: another actual parameter type check |
-------------------------------------------

% ./golf ./test/ms3/check.t36

STDOUT:


STDERR:
Error: number/type of arguments doesn't match function declaration at or near line 7


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: return+argument checks |
------------------------------

% ./golf ./test/ms3/check.t37

STDOUT:


STDERR:
Error: number/type of arguments doesn't match function declaration at or near line 8


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: scope check and undefined variable |
------------------------------------------

% ./golf ./test/ms3/check.t38

STDOUT:


STDERR:
Error: unknown identifier "c" at or near line 10


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: redefined variable |
--------------------------

% ./golf ./test/ms3/check.t39

STDOUT:


STDERR:
Error: "b" redefined at or near line 13


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: comparable and ordered comparisons |
------------------------------------------

% ./golf ./test/ms3/check.t40

STDOUT:


STDERR:
Error: operand type mismatch for ">" at or near line 8


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: int/bool distinction |
----------------------------

% ./golf ./test/ms3/check.t41

STDOUT:


STDERR:
Error: operand type mismatch for "=" at or near line 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: deep type propagation |
-----------------------------

% ./golf ./test/ms3/check.t42

STDOUT:
	Ltrue = 1
	Lfalse = 0
.data
S0:
	.byte 0
	
.text
main:
	jal Lmain
	j Lhalt
Lmain:
	subu $sp,$sp,12
	sw $ra,0($sp)
	sw $0,4($sp)
	li $t0,2
	li $t1,3
	li $t2,5
	mul $t3,$t1,$t2
	addu $t1,$t0,$t3
	li $t0,123
	subu $t2,$t1,$t0
	lw $t0,4($sp)
	sge $t1,$t2,
	sw $0,8($sp)
	li ,Ltrue
	li $t2,Lfalse
	and $t3,,$t2
	lw ,8($sp)
	li $t2,Ltrue
	seq $t4,,$t2
	or ,$t3,$t4
	xori ,,1
	xori ,,1
	xori ,,1
	li $t2,5
	li $t3,6
	sle $t4,$t2,$t3
	sne $t2,,$t4
RLmain:
	lw $ra,0($sp)
	addu $sp,$sp,12
	jr $ra
	
Lprintb:
	beqz $a0,PrintFalse
	la $a0,PDCTrue
	j Lprints
PrintFalse:
	la $a0,PDCFalse
	j Lprints
Lhalt:
	li $v0,10
	syscall
Lprintc:
	li $v0,11
	syscall
	jr $ra
Lprinti:
	li $v0 1
	syscall
	jr $ra
Lprints:
	li $v0,4
	syscall
	jr $ra
Lgetchar:
	li $v0,8
	syscall
	jr $ra
Llen:
	addi $sp,$sp,-4
	sw $ra,0($sp)
	li ,0 
loopStart:
	lb $t3, ($a0)
	beq $t3, $zero, loopEnd
	addi $a0,$a0,1
	addi ,,1
	j loopStart
loopEnd:
	lw $ra, 0($sp)
	addi $sp,$sp,4
	move $v0,
	jr $ra
.data
PDCTrue:
	.byte 116
	.byte 114
	.byte 117
	.byte 101
PDCFalse:
	.byte 102
	.byte 97
	.byte 108
	.byte 115
	.byte 101


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: redefining "true" and "false" |
-------------------------------------

% ./golf ./test/ms3/check.t43

STDOUT:
	Ltrue = 1
	Lfalse = 0
.data
S0:
	.byte 0
	
.text
G0:
	.word 0
main:
	jal Lmain
	j Lhalt


STDERR:


*** TERMINATION VIA SIGNAL: Segmentation fault

-------------------------------------------------------------------------------
Test: call of non-function |
----------------------------

% ./golf ./test/ms3/check.t44

STDOUT:


STDERR:
Error: can't call something that isn't a function at or near line 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: type id used in wrong context |
-------------------------------------

% ./golf ./test/ms3/check.t45

STDOUT:


STDERR:
Error: can't use type "int" here at or near line 5


RETURN CODE: 1

Run ended on Wed Apr 12 19:40:00 2023

