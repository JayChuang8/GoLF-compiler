Run started on Wed Mar 15 00:35:41 2023

Hostname: DESKTOP-LH91K7L

-------------------------------------------------------------------------------
Running make |
--------------

% /usr/bin/make

STDOUT:
/usr/bin/make -C Scanner
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/Scanner'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/Scanner'
/usr/bin/make -C Utility
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/Utility'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/Utility'
/usr/bin/make -C Parser
make[1]: Entering directory '/mnt/c/Projects/golf-compiler/Parser'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/mnt/c/Projects/golf-compiler/Parser'
g++ -o main.o -c main.cpp -MMD -MF main.d
g++ -o golf main.o Scanner/token.o Scanner/scanner.o Utility/utility.o Parser/parser.o Parser/ast.o


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Locating GoLF compiler |
------------------------

Compiler will be run as ./golf

-------------------------------------------------------------------------------
Test: too few arguments |
-------------------------

% ./golf

STDOUT:


STDERR:
Error: Requires 1 input file


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: too many arguments |
--------------------------

% ./golf /dev/null /dev/zero

STDOUT:


STDERR:
Error: Requires 1 input file


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: nonexistent file |
------------------------

% ./golf /i/do/not/exist

STDOUT:


STDERR:
Error: file '/i/do/not/exist' could not be opened


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: func open brace in wrong place |
--------------------------------------

% ./golf ./test/ms2/parse.t1

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 3


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "for" open brace exception |
----------------------------------

% ./golf ./test/ms2/parse.t2

STDOUT:
program 
    func @ line 4
        newid [main] @ line 4
        sig 
            formals 
        block 
            for [for] @ line 5
                block 
                    emptystmt 


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: "for" open brace in wrong place |
---------------------------------------

% ./golf ./test/ms2/parse.t3

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "if" open brace in wrong place |
--------------------------------------

% ./golf ./test/ms2/parse.t4

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: weird but correct formatting |
------------------------------------

% ./golf ./test/ms2/parse.t5

STDOUT:
program 
    func @ line 3
        newid [main] @ line 3
        sig 
            formals 
        block 
            if @ line 5
                == @ line 6
                    + @ line 5
                        int [2] @ line 5
                        int [3] @ line 6
                    int [5] @ line 7
                block 
                    emptystmt 


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: precedence check |
------------------------

% ./golf ./test/ms2/parse.t6

STDOUT:
statement id x 5
statement id y 6
program 
    func @ line 4
        newid [foo] @ line 4
        sig 
            formals 
            typeid [asdf] @ line 4
        block 
            = [=] @ line 5
                id [x] @ line 5
                + @ line 5
                    int [2] @ line 5
                    * @ line 5
                        int [3] @ line 5
                        int [5] @ line 5
            = [=] @ line 6
                id [y] @ line 6
                * @ line 6
                    + @ line 6
                        int [2] @ line 6
                        int [3] @ line 6
                    int [5] @ line 6


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: formal and actual params |
--------------------------------

% ./golf ./test/ms2/parse.t7

STDOUT:
statement id blarg 10
program 
    func @ line 3
        newid [foo] @ line 3
        sig 
            formals 
        block 
            emptystmt 
    func @ line 6
        newid [bar] @ line 6
        sig 
            formals 
                formal 
                    id [a1] @ line 6
                    typeid [int] @ line 6
                formal 
                    id [a2] @ line 6
                    typeid [bool] @ line 6
                formal 
                    id [a3] @ line 6
                    typeid [sometype] @ line 6
            typeid [returntype] @ line 6
        block 
            emptystmt 
    func @ line 9
        newid [baz] @ line 9
        sig 
            formals 
            typeid [int] @ line 9
        block 
            exprstmt @ line 10
                funccall @ line 10
                    id [blarg] @ line 10
                    actuals 
                        + @ line 11
                            int [123] @ line 11
                            int [456] @ line 11
                        funccall @ line 12
                            id [garble] @ line 12
                            actuals 
                                int [789] @ line 12
                        id [true] @ line 13
                        funccall @ line 14
                            id [greep] @ line 14
                            actuals 
                                id [false] @ line 14
                                string [eek] @ line 14


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: unary and binary minus |
------------------------------

% ./golf ./test/ms2/parse.t8

STDOUT:
statement id x 4
statement id x 5
statement id x 6
statement id x 7
statement id x 8
program 
    func @ line 3
        newid [main] @ line 3
        sig 
            formals 
        block 
            = [=] @ line 4
                id [x] @ line 4
                - @ line 4
                    id [a] @ line 4
                    u- @ line 4
                        int [123] @ line 4
            = [=] @ line 5
                id [x] @ line 5
                - @ line 5
                    id [a] @ line 5
                    u- @ line 5
                        int [123] @ line 5
            = [=] @ line 6
                id [x] @ line 6
                - @ line 6
                    id [a] @ line 6
                    u- @ line 6
                        u- @ line 6
                            int [123] @ line 6
            = [=] @ line 7
                id [x] @ line 7
                - @ line 7
                    id [a] @ line 7
                    u- @ line 7
                        id [b] @ line 7
            = [=] @ line 8
                id [x] @ line 8
                u- @ line 8
                    u- @ line 8
                        u- @ line 8
                            u- @ line 8
                                u- @ line 8
                                    u- @ line 8
                                        u- @ line 8
                                            id [x] @ line 8


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: func open brace in wrong place, with semicolon |
------------------------------------------------------

% ./golf ./test/ms2/parse.t9

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: func open brace with bonus semicolon |
--------------------------------------------

% ./golf ./test/ms2/parse.t10

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 4


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "for" open brace in wrong place, with semicolon |
-------------------------------------------------------

% ./golf ./test/ms2/parse.t11

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "for" with bonus semicolon |
----------------------------------

% ./golf ./test/ms2/parse.t12

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "if" open brace in wrong place, with semicolon |
------------------------------------------------------

% ./golf ./test/ms2/parse.t13

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "if" with bonus semicolon |
---------------------------------

% ./golf ./test/ms2/parse.t14

STDOUT:


STDERR:
Error: unexpected ;, expected { at or near 5


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: func line breaks using trailing commas |
----------------------------------------------

% ./golf ./test/ms2/parse.t15

STDOUT:
program 
    func @ line 3
        newid [foo] @ line 3
        sig 
            formals 
                formal 
                    id [a] @ line 3
                    typeid [int] @ line 3
                formal 
                    id [b] @ line 4
                    typeid [int] @ line 4
                formal 
                    id [c] @ line 5
                    typeid [int] @ line 5
        block 
            emptystmt 


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: func line breaks sans trailing comma |
--------------------------------------------

% ./golf ./test/ms2/parse.t16

STDOUT:


STDERR:
Error: unexpected ;, expected ) at or near 6


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: func call line breaks with trailing commas |
--------------------------------------------------

% ./golf ./test/ms2/parse.t17

STDOUT:
statement id garbled 4
program 
    func @ line 3
        newid [foo] @ line 3
        sig 
            formals 
        block 
            exprstmt @ line 4
                funccall @ line 4
                    id [garbled] @ line 4
                    actuals 
                        id [a] @ line 4
                        id [b] @ line 5
                        id [c] @ line 6


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: func call line breaks sans trailing comma |
-------------------------------------------------

% ./golf ./test/ms2/parse.t18

STDOUT:


STDERR:
Error: Expected source file at or near 1


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: legit syntax salad |
--------------------------

% ./golf ./test/ms2/parse.t19

STDOUT:
statement ; ; 5
statement id x 6
statement id foo 7
statement ( ( 8
statement id ego 13
statement int 42 16
statement int 111 19
statement int 222 21
statement int 333 23
statement int 444 26
statement int 555 28
statement int 666 31
statement int 777 34
statement string abc 37
statement id asdf 38
program 
    func @ line 3
        newid [asdf] @ line 3
        sig 
            formals 
        block 
            var [var] @ line 4
                newid [i] @ line 4
                typeid [int] @ line 4
            emptystmt 
            = [=] @ line 6
                id [x] @ line 6
                int [123] @ line 6
            exprstmt @ line 7
                funccall @ line 7
                    id [foo] @ line 7
                    actuals 
                        id [d] @ line 7
            exprstmt @ line 8
                funccall @ line 8
                    id [bar] @ line 8
                    actuals 
                        id [d] @ line 8
            return [return] @ line 9
            return [return] @ line 10
                int [12345] @ line 10
            break [break] @ line 11
            block 
                exprstmt @ line 13
                    id [ego] @ line 13
            if @ line 15
                id [true] @ line 15
                block 
                    exprstmt @ line 16
                        int [42] @ line 16
            if @ line 18
                id [false] @ line 18
                block 
                    exprstmt @ line 19
                        int [111] @ line 19
                ifelse @ line 20
                    id [fallse] @ line 20
                    block 
                        exprstmt @ line 21
                            int [222] @ line 21
                block 
                    exprstmt @ line 23
                        int [333] @ line 23
            if @ line 25
                id [false] @ line 25
                block 
                    exprstmt @ line 26
                        int [444] @ line 26
                block 
                    exprstmt @ line 28
                        int [555] @ line 28
            for [for] @ line 30
                block 
                    exprstmt @ line 31
                        int [666] @ line 31
            for [for] @ line 33
                id [some_expr] @ line 33
                block 
                    exprstmt @ line 34
                        int [777] @ line 34
            = [=] @ line 37
                string [abc] @ line 37
                id [def] @ line 37
            = [=] @ line 38
                == @ line 38
                    + @ line 38
                        id [asdf] @ line 38
                        int [12] @ line 38
                    int [4] @ line 38
                id [bcd] @ line 38


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: assignment |
------------------

% ./golf ./test/ms2/parse.t20

STDOUT:
statement id a 7


STDERR:
Error: unexpected =, expected ; at or near 7


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: associativity test |
--------------------------

% ./golf ./test/ms2/parse.t21

STDOUT:
statement id a 10
statement id a 11
program 
    func @ line 3
        newid [a_sock] @ line 3
        sig 
            formals 
        block 
            var [var] @ line 4
                newid [a] @ line 4
                typeid [int] @ line 4
            var [var] @ line 5
                newid [b] @ line 5
                typeid [int] @ line 5
            var [var] @ line 6
                newid [c] @ line 6
                typeid [int] @ line 6
            var [var] @ line 7
                newid [d] @ line 7
                typeid [int] @ line 7
            var [var] @ line 8
                newid [e] @ line 8
                typeid [int] @ line 8
            exprstmt @ line 10
                + @ line 10
                    + @ line 10
                        + @ line 10
                            + @ line 10
                                id [a] @ line 10
                                id [b] @ line 10
                            id [c] @ line 10
                        id [d] @ line 10
                    id [e] @ line 10
            exprstmt @ line 11
                / @ line 11
                    / @ line 11
                        / @ line 11
                            / @ line 11
                                id [a] @ line 11
                                id [b] @ line 11
                            id [d] @ line 11
                        id [d] @ line 11
                    id [e] @ line 11


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: a calculated move |
-------------------------

% ./golf ./test/ms2/gen.t18

STDOUT:
statement id init 6
statement id parser 7
statement id _havechar 19
statement id prints 27
statement id halt 28
statement id _havechar 30
statement id _char 31
statement id _havetoken 46
statement id _token 47
statement id prints 53
statement id printc 54


STDERR:
Error: unexpected id, expected ; at or near 55


RETURN CODE: 1

Run ended on Wed Mar 15 00:35:42 2023

